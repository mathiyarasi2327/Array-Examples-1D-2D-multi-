# Array-Examples-1D-2D-multi-
public class ArrayExamples {
    public static void main(String[] args) {
        
        // 1D Array Example
        int[] oneDArray = {10, 20, 30, 40, 50};
        System.out.println("1D Array:");
        System.out.println("First Element: " + oneDArray[0]);
        System.out.println("Last Element: " + oneDArray[oneDArray.length - 1]);
        System.out.println("Length of 1D Array: " + oneDArray.length);
        
        // Looping through the 1D array
        System.out.println("All elements in the 1D array:");
        for (int i = 0; i < oneDArray.length; i++) {
            System.out.print(oneDArray[i] + " ");
        }
        System.out.println("\n");
        
        // 2D Array Example (Matrix)
        int[][] twoDArray = {
            {1, 2, 3},
            {4, 5, 6},
            {7, 8, 9}
        };
        System.out.println("2D Array (Matrix):");
        
        // Looping through the 2D array to print all elements
        for (int i = 0; i < twoDArray.length; i++) {
            for (int j = 0; j < twoDArray[i].length; j++) {
                System.out.print(twoDArray[i][j] + " ");
            }
            System.out.println();
        }
        
        // 3D Array Example
        int[][][] threeDArray = {
            {
                {1, 2, 3},
                {4, 5, 6}
            },
            {
                {7, 8, 9},
                {10, 11, 12}
            }
        };
        System.out.println("\n3D Array:");

        // Looping through the 3D array to print all elements
        for (int i = 0; i < threeDArray.length; i++) {
            for (int j = 0; j < threeDArray[i].length; j++) {
                for (int k = 0; k < threeDArray[i][j].length; k++) {
                    System.out.print(threeDArray[i][j][k] + " ");
                }
                System.out.println();
            }
        }
    }
}
output:
1D Array:
First Element: 10
Last Element: 50
Length of 1D Array: 5
All elements in the 1D array:
10 20 30 40 50 

2D Array (Matrix):
1 2 3 
4 5 6 
7 8 9 

3D Array:
1 2 3 
4 5 6 
7 8 9 
10 11 12 
